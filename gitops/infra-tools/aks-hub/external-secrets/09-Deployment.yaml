---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-secrets-cert-controller
  namespace: "external-secrets"
  labels:
    app.kubernetes.io/name: external-secrets-cert-controller
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.7.2"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: external-secrets-cert-controller
      app.kubernetes.io/instance: external-secrets
  template:
    metadata:
      labels:
        app.kubernetes.io/name: external-secrets-cert-controller
        app.kubernetes.io/instance: external-secrets
    spec:
      serviceAccountName: external-secrets-cert-controller
      automountServiceAccountToken: true
      containers:
        - name: cert-controller
          image: "ghcr.io/external-secrets/external-secrets:v0.7.2"
          imagePullPolicy: IfNotPresent
          args:
          - certcontroller
          - --crd-requeue-interval=5m
          - --service-name=external-secrets-webhook
          - --service-namespace=external-secrets
          - --secret-name=external-secrets-webhook
          - --secret-namespace=external-secrets
          ports:
            - containerPort: 8080
              protocol: TCP
              name: metrics
          readinessProbe:
            httpGet:
              port: 8081
              path: /readyz
            initialDelaySeconds: 20
            periodSeconds: 5
          resources: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-secrets
  namespace: "external-secrets"
  labels:
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.7.2"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: external-secrets
      app.kubernetes.io/instance: external-secrets
  template:
    metadata:
      labels:
        app.kubernetes.io/name: external-secrets
        app.kubernetes.io/instance: external-secrets
    spec:
      serviceAccountName: external-secrets
      automountServiceAccountToken: true
      containers:
        - name: external-secrets
          image: "ghcr.io/external-secrets/external-secrets:v0.7.2"
          imagePullPolicy: IfNotPresent
          args:
          - --concurrent=1
          ports:
            - containerPort: 8080
              protocol: TCP
              name: metrics
          resources: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-secrets-webhook
  namespace: "external-secrets"
  labels:
    app.kubernetes.io/name: external-secrets-webhook
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/version: "v0.7.2"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: external-secrets-webhook
      app.kubernetes.io/instance: external-secrets
  template:
    metadata:
      labels:
        app.kubernetes.io/name: external-secrets-webhook
        app.kubernetes.io/instance: external-secrets
    spec:
      hostNetwork: false
      serviceAccountName: external-secrets-webhook
      automountServiceAccountToken: true
      containers:
        - name: webhook
          image: "ghcr.io/external-secrets/external-secrets:v0.7.2"
          imagePullPolicy: IfNotPresent
          args:
          - webhook
          - --port=10250
          - --dns-name=external-secrets-webhook.external-secrets.svc
          - --cert-dir=/tmp/certs
          - --check-interval=5m
          - --metrics-addr=:8080
          - --healthz-addr=:8081
          ports:
            - containerPort: 8080
              protocol: TCP
              name: metrics
            - containerPort: 10250
              protocol: TCP
              name: webhook
          readinessProbe:
            httpGet:
              port: 8081
              path: /readyz
            initialDelaySeconds: 20
            periodSeconds: 5
          resources:
            limits:
              cpu: 10m
              memory: 64Mi
            requests:
              cpu: 1m
              memory: 48Mi
          volumeMounts:
            - name: certs
              mountPath: /tmp/certs
              readOnly: true
      volumes:
        - name: certs
          secret:
            secretName: external-secrets-webhook