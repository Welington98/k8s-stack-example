---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: policy-reporter-kyverno-plugin
  namespace: policy-reporter
  labels:
    app.kubernetes.io/name: kyverno-plugin
    app.kubernetes.io/instance: policy-reporter
    app.kubernetes.io/version: "1.5.1"
    app.kubernetes.io/component: plugin
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kyverno-plugin
      app.kubernetes.io/instance: policy-reporter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kyverno-plugin
        app.kubernetes.io/instance: policy-reporter
        app.kubernetes.io/version: "1.5.1"
      annotations:
        checksum/secret: "0fe2408d8b392b2481a70b38cacb3766f14233f03b6f14df5b43fa7455258f3a"
    spec:
      serviceAccountName: policy-reporter-kyverno-plugin
      automountServiceAccountToken: true
      containers:
        - name: "kyverno-plugin"
          image: "ghcr.io/kyverno/policy-reporter-kyverno-plugin:1.5.1"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1234
            seccompProfile:
              type: RuntimeDefault
          args:
            - --port=8080
            - --metrics-enabled=true
            - --rest-enabled=true
            - --lease-name=policy-reporter-kyverno-plugin
          ports:
            - name: rest
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: rest
          readinessProbe:
            httpGet:
              path: /ready
              port: rest
          resources:
            limits:
              cpu: 10m
              memory: 64Mi
            requests:
              cpu: 1m
              memory: 32Mi
          volumeMounts:
          - name: config-file
            mountPath: /app/config.yaml
            subPath: config.yaml
            readOnly: true
      volumes:
      - name: config-file
        secret:
          secretName: policy-reporter-kyverno-plugin-config
          optional: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: policy-reporter
  namespace: policy-reporter
  labels:
    app.kubernetes.io/name: policy-reporter
    app.kubernetes.io/instance: policy-reporter
    app.kubernetes.io/version: "2.14.2"
    app.kubernetes.io/component: reporting
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: policy-reporter
      app.kubernetes.io/instance: policy-reporter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: policy-reporter
        app.kubernetes.io/instance: policy-reporter
        app.kubernetes.io/version: "2.14.2"
      annotations:
        checksum/secret: "394eeb8c7568ce825e4022fa1e81020f520ba2331ba52919472419a1c39f0f70"
    spec:
      serviceAccountName: policy-reporter
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 1234
      containers:
        - name: policy-reporter
          image: "ghcr.io/kyverno/policy-reporter:2.14.2"
          imagePullPolicy: IfNotPresent
          securityContext: 
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1234
            seccompProfile:
              type: RuntimeDefault
          args:
            - --port=8080
            - --config=/app/config.yaml
            - --dbfile=/sqlite/database.db
            - --metrics-enabled=true
            - --rest-enabled=false
            - --profile=false
            - --lease-name=policy-reporter
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ready
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            limits:
              cpu: 10m
              memory: 64Mi
            requests:
              cpu: 1m
              memory: 48Mi
          volumeMounts:
          - name: sqlite
            mountPath: /sqlite
          - name: config-file
            mountPath: /app/config.yaml
            subPath: config.yaml
            readOnly: true
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
      volumes:
      - name: sqlite
        emptyDir: {}
      - name: config-file
        secret:
          secretName: policy-reporter-config
          optional: true